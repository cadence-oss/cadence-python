"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class EncodingType(_EncodingType, metaclass=_EncodingTypeEnumTypeWrapper):
    pass
class _EncodingType:
    V = typing.NewType('V', builtins.int)
class _EncodingTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EncodingType.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    ENCODING_TYPE_INVALID = EncodingType.V(0)
    ENCODING_TYPE_THRIFTRW = EncodingType.V(1)
    ENCODING_TYPE_JSON = EncodingType.V(2)
    ENCODING_TYPE_PROTO3 = EncodingType.V(3)

ENCODING_TYPE_INVALID = EncodingType.V(0)
ENCODING_TYPE_THRIFTRW = EncodingType.V(1)
ENCODING_TYPE_JSON = EncodingType.V(2)
ENCODING_TYPE_PROTO3 = EncodingType.V(3)
global___EncodingType = EncodingType


class WorkflowExecution(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    RUN_ID_FIELD_NUMBER: builtins.int
    workflow_id: typing.Text = ...
    run_id: typing.Text = ...
    def __init__(self,
        *,
        workflow_id : typing.Text = ...,
        run_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["run_id",b"run_id","workflow_id",b"workflow_id"]) -> None: ...
global___WorkflowExecution = WorkflowExecution

class WorkflowType(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___WorkflowType = WorkflowType

class ActivityType(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___ActivityType = ActivityType

class Payload(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATA_FIELD_NUMBER: builtins.int
    data: builtins.bytes = ...
    def __init__(self,
        *,
        data : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data",b"data"]) -> None: ...
global___Payload = Payload

class Failure(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REASON_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    reason: typing.Text = ...
    details: builtins.bytes = ...
    def __init__(self,
        *,
        reason : typing.Text = ...,
        details : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["details",b"details","reason",b"reason"]) -> None: ...
global___Failure = Failure

class Memo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class FieldsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___Payload: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___Payload] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FIELDS_FIELD_NUMBER: builtins.int
    @property
    def fields(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Payload]: ...
    def __init__(self,
        *,
        fields : typing.Optional[typing.Mapping[typing.Text, global___Payload]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fields",b"fields"]) -> None: ...
global___Memo = Memo

class Header(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class FieldsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___Payload: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___Payload] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FIELDS_FIELD_NUMBER: builtins.int
    @property
    def fields(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Payload]: ...
    def __init__(self,
        *,
        fields : typing.Optional[typing.Mapping[typing.Text, global___Payload]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fields",b"fields"]) -> None: ...
global___Header = Header

class SearchAttributes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class IndexedFieldsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___Payload: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___Payload] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    INDEXED_FIELDS_FIELD_NUMBER: builtins.int
    @property
    def indexed_fields(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Payload]: ...
    def __init__(self,
        *,
        indexed_fields : typing.Optional[typing.Mapping[typing.Text, global___Payload]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["indexed_fields",b"indexed_fields"]) -> None: ...
global___SearchAttributes = SearchAttributes

class DataBlob(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENCODING_TYPE_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    encoding_type: global___EncodingType.V = ...
    data: builtins.bytes = ...
    def __init__(self,
        *,
        encoding_type : global___EncodingType.V = ...,
        data : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data",b"data","encoding_type",b"encoding_type"]) -> None: ...
global___DataBlob = DataBlob

class WorkerVersionInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IMPL_FIELD_NUMBER: builtins.int
    FEATURE_VERSION_FIELD_NUMBER: builtins.int
    impl: typing.Text = ...
    feature_version: typing.Text = ...
    def __init__(self,
        *,
        impl : typing.Text = ...,
        feature_version : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["feature_version",b"feature_version","impl",b"impl"]) -> None: ...
global___WorkerVersionInfo = WorkerVersionInfo

class SupportedClientVersions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GO_SDK_FIELD_NUMBER: builtins.int
    JAVA_SDK_FIELD_NUMBER: builtins.int
    go_sdk: typing.Text = ...
    """Indicates the highest Go SDK version server will accept requests from."""

    java_sdk: typing.Text = ...
    """Indicates the highest Java SDK version server will accept requests from."""

    def __init__(self,
        *,
        go_sdk : typing.Text = ...,
        java_sdk : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["go_sdk",b"go_sdk","java_sdk",b"java_sdk"]) -> None: ...
global___SupportedClientVersions = SupportedClientVersions

class RetryPolicy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INITIAL_INTERVAL_FIELD_NUMBER: builtins.int
    BACKOFF_COEFFICIENT_FIELD_NUMBER: builtins.int
    MAXIMUM_INTERVAL_FIELD_NUMBER: builtins.int
    MAXIMUM_ATTEMPTS_FIELD_NUMBER: builtins.int
    NON_RETRYABLE_ERROR_REASONS_FIELD_NUMBER: builtins.int
    EXPIRATION_INTERVAL_FIELD_NUMBER: builtins.int
    @property
    def initial_interval(self) -> google.protobuf.duration_pb2.Duration:
        """Interval of the first retry. If backoffCoefficient is 1.0 then it is used for all retries."""
        pass
    backoff_coefficient: builtins.float = ...
    """Coefficient used to calculate the next retry interval.
    The next retry interval is previous interval multiplied by the coefficient.
    Must be 1 or larger.
    """

    @property
    def maximum_interval(self) -> google.protobuf.duration_pb2.Duration:
        """Maximum interval between retries. Exponential backoff leads to interval increase.
        This value is the cap of the increase. Default is 100x of initial interval.
        """
        pass
    maximum_attempts: builtins.int = ...
    """Maximum number of attempts. When exceeded the retries stop even if not expired yet.
    Must be 1 or bigger. Default is unlimited.
    """

    @property
    def non_retryable_error_reasons(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Non-Retryable errors. Will stop retrying if error type matches this list."""
        pass
    @property
    def expiration_interval(self) -> google.protobuf.duration_pb2.Duration:
        """Expiration time for the whole retry process."""
        pass
    def __init__(self,
        *,
        initial_interval : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        backoff_coefficient : builtins.float = ...,
        maximum_interval : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        maximum_attempts : builtins.int = ...,
        non_retryable_error_reasons : typing.Optional[typing.Iterable[typing.Text]] = ...,
        expiration_interval : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expiration_interval",b"expiration_interval","initial_interval",b"initial_interval","maximum_interval",b"maximum_interval"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backoff_coefficient",b"backoff_coefficient","expiration_interval",b"expiration_interval","initial_interval",b"initial_interval","maximum_attempts",b"maximum_attempts","maximum_interval",b"maximum_interval","non_retryable_error_reasons",b"non_retryable_error_reasons"]) -> None: ...
global___RetryPolicy = RetryPolicy
